<script>
  import svelteLogo from './assets/svelte.svg'
  import viteLogo from '/vite.svg'
  import Counter from './lib/Counter.svelte'
</script>

<main>
  <div>
    <a href="https://vitejs.dev" target="_blank" rel="noreferrer">
      <img src={viteLogo} class="logo" alt="Vite Logo" />
    </a>
    <a href="https://svelte.dev" target="_blank" rel="noreferrer">
      <img src={svelteLogo} class="logo svelte" alt="Svelte Logo" />
    </a>
  </div>
  <h1>Vite + Svelte</h1>

  <div class="card">
    <Counter />
  </div>

  <p>
    Check out <a href="https://github.com/sveltejs/kit#readme" target="_blank" rel="noreferrer">SvelteKit</a>, the official Svelte app framework powered by Vite!
  </p>

  <p class="read-the-docs">
    Click on the Vite and Svelte logos to learn more
  </p>
</main>

<style>
  .logo {
    height: 6em;
    padding: 1.5em;
    will-change: filter;
    transition: filter 300ms;
  }
  .logo:hover {
    filter: drop-shadow(0 0 2em #646cffaa);
  }
  .logo.svelte:hover {
    filter: drop-shadow(0 0 2em #ff3e00aa);
  }
  .read-the-docs {
    color: #888;
  }
</style>



PART 2 



<script>

  /* 
  VALUES : {1: Ace, 2 to 10 : ==, 11 : Jack, 12 : Queen, 13 : King}
  COLORS : {1 : Club, 2 : Spades, 3 : Heart 4 : Diamonds}
  */

  function Card(){
  
    let valid_card = false;

    while(!valid_card){
      this.value = ((Math.floor(Math.random() * 13)) + 1); // 1 to 13
      this.color = ((Math.floor(Math.random() * 4)) + 1); // 1 to 4

      // Si la carte est disponible, on recoit true 
      valid_card = validate_card(this);
    }

    // AFFICHER LA CARTE
    card_link[i] = "../src/assets/cartes/" + new_card[0] + "-" + new_card[1] + ".png";
    // Ajouter à la main du joueur
    return new_card;
  }

  // Array avec les liens 
  let card_link = new Array(5);
  let player_cards = new Array(5,2);
  let drawed_cards = new Array(10,2);

  function commencer_partie(){
    // Five cards
    for(let i = 0; i < 5; i++){
      const new_card = draw_card();
      player_cards[i][0] = new_card[0];
      player_cards[i][1] = new_card[1];
    }
  }

  function draw_card(i) {
    // NEW CARD
    let new_card = new Array();

    let valid_card = false;
    while(!valid_card){
      // Value - (from 1 to 13)
      new_card[0] = ((Math.floor(Math.random() * 13)) + 1);
      // Color - (from 1 to 4)
      new_card[1] = ((Math.floor(Math.random() * 4)) + 1);

      // Si la carte est disponible, on recoit true 
      valid_card = validate_card(new_card);
    }

    // AFFICHER LA CARTE
    card_link[i] = "../src/assets/cartes/" + new_card[0] + "-" + new_card[1] + ".png";
    // Ajouter à la main du joueur
    return new_card;
  }

  function validate_card(new_card){
    // Valid until an indentical card is found
    let valid_card = true;

    // Looping through all 10 possible drawed cards
    // for(let index = 0; index < 10; index++){
    //   if(drawed_cards[index][0] === new_card[0] && drawed_cards[index][1] === new_card[1]){
    //     valid_card = false;
    //     //alert("La carte " + new_card[0] + "-" + new_card[1] +  " équivaut à " + player_cards[index][0] + "-" + new_card[index][1]);
    //   }else{
    //     console.log('aaa');
    //   }
    // }
    for(const card of drawed_cards){
      // If value1 = value2 && color1 = color2
      if(card[0] == new_card[0] && card[1] == new_card[1]){
        valid_card = false;
        alert(card[0]);
      }
      else{
        console.log('Yes');
      }
    }
    return valid_card;
  }


</script>


<main class="background">
  <div class="title">
    POKER
  </div>
  <div class="poker_table">

    <!-- <div class="display_text">
      Current deck: {player_cards[0]} - {player_cards[1]} - {player_cards[2]} - {player_cards[3]} - {player_cards[4]}
    </div> -->

    <!-- style="background-image: url('../src/assets/cartes/1-1.png')"  -->
    <div id="carte_1" class="cartes" style="background-image: url('{card_link[0]}')"></div>
    <div id="carte_2" class="cartes" style="background-image: url('{card_link[1]}')"></div>
    <div id="carte_3" class="cartes" style="background-image: url('{card_link[2]}')"></div>
    <div id="carte_4" class="cartes" style="background-image: url('{card_link[3]}')"></div>
    <div id="carte_5" class="cartes" style="background-image: url('{card_link[4]}')"></div>
    <button class="btn" on:click={commencer_partie}>Shuffle</button>
  </div>
</main>


<!-- NOTES

  Pour changer les cartes bind: select multiple https://svelte.dev/docs#template-syntax-element-directives-bind-property

-->

<style>
  :root{
    background-color: rgb(52, 52, 52);
    background: #636363;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to right, #454542, #4e4e4e);  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to right, #232323, #484848); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    margin:0;
    padding:0;
  }
  .poker_table{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-height: 75vh;
    min-width: 75vw;
    background-image: url("assets/poker-table.png");
    background-repeat: none;
    background-position: center;
    background-size: cover;
  }
  .cartes{
    position: absolute;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    width: 101px;
    height: 146px;
    border-radius: 5px;
    top: 50%;
    opacity: 0.8;
  }
  #carte_1{
    left: 27%;
    transform: translate(-50%, -50%);
    background-image: var(--bg-img);
    color: var(--theme-color);
  }
  #carte_2{
    left: 38.5%;
    transform: translate(-50%, -50%);
  }
  #carte_3{
    left: 50%;
    transform: translate(-50%, -50%);
    background-image: var(--bg-img);
  }
  #carte_4{
    left: 61.5%;
    transform: translate(-50%, -50%);
  }
  #carte_5{
    left: 73%;
    transform: translate(-50%, -50%);
  }
  .btn{
    background-color: gray;
    position: absolute;
    top: 66%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  /* .display_text{
    color:black;
    position: absolute;
    top: 26%;
    left: 50%;
    transform: translate(-50%, -50%);
  } */
  .title{
    color:black;
    font-size: 24px;
  }
</style>
